{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6707d3a8076425e9a58c","webpack:///./config/dropbox.config.json","webpack:///./config/reddit.config.json","webpack:///./src/api/persistence/dropboxApi.ts","webpack:///./src/api/redditApi.ts","webpack:///./src/index.ts","webpack:///external {\"commonjs\":\"dropbox\",\"commonjs2\":\"dropbox\",\"amd\":\"dropbox\",\"root\":\"dropbox\"}","webpack:///external {\"commonjs\":\"snoowrap\",\"commonjs2\":\"snoowrap\",\"amd\":\"snoowrap\",\"root\":\"snoowrap\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA,E;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA;AACA;AACA;AACA,SAAS,4BAA4B,iBAAiB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4BAA4B,iBAAiB,EAAE;AACxD;AACA;AACA,CAAC;AACD;;;;;;;;ACxBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,8BAA8B,cAAc,EAAE,EAAE;AACnF,oCAAoC,cAAc,EAAE;AACpD;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C,mCAAmC,aAAa,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa,EAAE;AAClD;AACA;AACA,CAAC;AACD;;;;;;;;ACvCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kBAAkB,EAAE;AACrF;AACA,sFAAsF,gCAAgC,EAAE;AACxH;AACA;AACA;AACA,SAAS;AACT;AACA,sEAAsE,6BAA6B,EAAE;AACrG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B,EAAE;AACjE,gCAAgC,yBAAyB,EAAE;AAC3D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa,EAAE;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6FAA6F,6BAA6B,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,2BAA2B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2FAA2F;AACzH;AACA;AACA;AACA;AACA,iDAAiD,8BAA8B,EAAE;AACjF;AACA;AACA,CAAC;AACD;;;;;;;AC5GA,+C;;;;;;ACAA,+C","file":"snoo_shelf.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dropbox\"), require(\"snoowrap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"snoo_shelf\", [\"dropbox\", \"snoowrap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"snoo_shelf\"] = factory(require(\"dropbox\"), require(\"snoowrap\"));\n\telse\n\t\troot[\"snoo_shelf\"] = factory(root[\"dropbox\"], root[\"snoowrap\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6707d3a8076425e9a58c","module.exports = {\n\t\"accessToken\": \"-6gTWWv3WIAAAAAAAAAADfPxr6CzNmhLN40Gm0u0XpzU8R-EF4gy8wi_qfcWLOSr\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/dropbox.config.json\n// module id = 0\n// module chunks = 0","module.exports = {\n\t\"username\": \"somi92\",\n\t\"password\": \"Marakana@2016\",\n\t\"userAgent\": \"snooshelf:VJ7A0gNGyLsHyw:0.0.1\",\n\t\"clientId\": \"VJ7A0gNGyLsHyw\",\n\t\"clientSecret\": \"ascl0WqNs_Qway0K3eFDGpUTwD4\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/reddit.config.json\n// module id = 1\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dropbox = require(\"dropbox\");\nvar DropboxApi = (function () {\n    function DropboxApi(config) {\n        this._config = config;\n        this._dropbox = new Dropbox({ accessToken: this._config.accessToken });\n    }\n    DropboxApi.prototype.read = function (id) {\n        return this._dropbox.filesDownload({\n            path: \"/\" + id + \".json\"\n        }).then(function (response) { return response; });\n    };\n    DropboxApi.prototype.write = function (id, content) {\n        return this._dropbox.filesUpload({\n            path: \"/\" + id + \".json\",\n            contents: content,\n            mode: {\n                \".tag\": \"overwrite\"\n            }\n        }).then(function (response) { return response; });\n    };\n    return DropboxApi;\n}());\nexports.DropboxApi = DropboxApi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api/persistence/dropboxApi.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar snoowrap = require(\"snoowrap\");\nvar RedditApi = (function () {\n    function RedditApi(config) {\n        this._config = config;\n        this._snoowrap = new snoowrap({\n            userAgent: this._config.userAgent,\n            clientId: this._config.clientId,\n            clientSecret: this._config.clientSecret,\n            username: this._config.username,\n            password: this._config.password\n        });\n    }\n    Object.defineProperty(RedditApi.prototype, \"config\", {\n        get: function () {\n            return this._config;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RedditApi.prototype.getMySavedPosts = function () {\n        return this._snoowrap.getMe()\n            .then(function (user) { return user.getSavedContent({ limit: 5000 }); })\n            .then(function (posts) { return posts; });\n    };\n    RedditApi.prototype.getMySubscriptions = function () {\n        return this._snoowrap\n            .getSubscriptions({ limit: 100 })\n            .then(function (subs) { return subs; });\n    };\n    RedditApi.prototype.unsavePost = function (id) {\n        return this._snoowrap\n            .getSubmission(id)\n            .unsave()\n            .then(function (post) { return post; });\n    };\n    return RedditApi;\n}());\nexports.RedditApi = RedditApi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api/redditApi.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar redditConfig = require(\"../config/reddit.config.json\");\nvar dropboxConfig = require(\"../config/dropbox.config.json\");\nvar redditApi_1 = require(\"./api/redditApi\");\nvar dropboxApi_1 = require(\"./api/persistence/dropboxApi\");\nvar SnooShelf = (function () {\n    function SnooShelf() {\n        this._dropboxApi = new dropboxApi_1.DropboxApi(dropboxConfig);\n        this._redditApi = new redditApi_1.RedditApi(redditConfig);\n        this._tags = [];\n        this._taggedPosts = [];\n        this._subs = [];\n        this._posts = [];\n    }\n    SnooShelf.prototype.setData = function (data) {\n        this._subs = data[0];\n        this._posts = data[1];\n        this._tags = JSON.parse(data[2].fileBinary);\n        this._taggedPosts = JSON.parse(data[3].fileBinary);\n        return data;\n    };\n    SnooShelf.prototype.tagPosts = function () {\n        var _this = this;\n        var taggedPostIds = this._taggedPosts.map(function (tp) { return tp.postId; });\n        taggedPostIds.forEach(function (taggedPostId, ind) {\n            var postIndex = _this._posts.indexOf(_this._posts.filter(function (post) { return post.id == taggedPostId; })[0]);\n            if (postIndex == -1) {\n                _this._taggedPosts.splice(ind, 1);\n            }\n        });\n        this._posts.forEach(function (post) {\n            var taggedPost = _this._taggedPosts.filter(function (tp) { return tp.postId == post.id; })[0];\n            post.tags = taggedPost ? taggedPost.tags : [];\n        });\n        return this._posts;\n    };\n    SnooShelf.prototype.fetchShelf = function () {\n        var _this = this;\n        var subsPromise = this._redditApi.getMySubscriptions();\n        var postsPromise = this._redditApi.getMySavedPosts();\n        var tagsPromise = this._dropboxApi.read(\"TAGS\");\n        var taggedPostsPromise = this._dropboxApi.read(\"TAGGED_POSTS\");\n        return Promise.all([subsPromise, postsPromise, tagsPromise, taggedPostsPromise])\n            .then(function (data) { return _this.setData(data); })\n            .then(function (_) { return _this.tagPosts(); })\n            .catch(function (error) {\n            throw new Error(error);\n        });\n    };\n    SnooShelf.prototype.saveShelf = function () {\n        var tagsPromise = this._dropboxApi.write(\"TAGS\", JSON.stringify(this._tags));\n        var taggedPostsPromise = this._dropboxApi.write(\"TAGGED_POSTS\", JSON.stringify(this._taggedPosts));\n        return Promise.all([tagsPromise, taggedPostsPromise])\n            .then(function (data) { return true; })\n            .catch(function (error) {\n            throw new Error(error);\n        });\n    };\n    SnooShelf.prototype.tagPost = function (post, tags) {\n        post.tags = tags;\n        var taggedPostId = this._taggedPosts.indexOf(this._taggedPosts.filter(function (tg) { return tg.postId == post.id; })[0]);\n        if (tags.length == 0) {\n            if (taggedPostId > -1)\n                this._taggedPosts.splice(taggedPostId, 1);\n        }\n        else {\n            if (taggedPostId > -1) {\n                this._taggedPosts[taggedPostId].tags = tags;\n            }\n            else {\n                var newTaggedPost = {\n                    postId: post.id,\n                    tags: tags\n                };\n                this._taggedPosts.push(newTaggedPost);\n            }\n        }\n        return post;\n    };\n    SnooShelf.prototype.addTag = function (newTag) {\n        this._tags.push(newTag);\n        return newTag;\n    };\n    SnooShelf.prototype.removeTag = function (tagName) {\n        var tagIndex = this._tags.indexOf(this._tags.filter(function (tp) { return tp.name == tagName; })[0]);\n        if (tagIndex > -1) {\n            this._tags.splice(tagIndex, 1);\n        }\n    };\n    /**\n     * testing...\n     */\n    SnooShelf.prototype.run = function () {\n        // const api = new RedditApi(redditConfig)\n        // api.getMySubscriptions().then(val => console.log(val[0].display_name_prefixed))\n        // api.getMySavedPosts().then(val => console.log(val[0].title))\n        // const persistence = new DropboxApi(dropboxConfig)\n        // persistence\n        //   .write(\"test\", \"{ \\\"id\\\": 1, \\\"name\\\": \\\"A green door\\\", \\\"price\\\": 12.50, \\\"tags\\\": [\\\"home\\\", \\\"green\\\"] }\")\n        //   .then(val => console.log(val))\n        // persistence\n        //   .read(\"test\")\n        //   .then(val => console.log(val.fileBinary))\n        this.fetchShelf().then(function (posts) { return console.log(posts[0]); });\n    };\n    return SnooShelf;\n}());\nexports.SnooShelf = SnooShelf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"dropbox\",\"commonjs2\":\"dropbox\",\"amd\":\"dropbox\",\"root\":\"dropbox\"}\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"snoowrap\",\"commonjs2\":\"snoowrap\",\"amd\":\"snoowrap\",\"root\":\"snoowrap\"}\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}